//
//  Created by Roberto Seidenberg
//  All rights reserved
//

// Apple
#import <Foundation/Foundation.h>

// Inherited classes
#import "RCCUbiquitousObject.h"

/**
 A RCCCredential object stores data for a given provider.
 RCCCredential objects are typically generated by RCCUbiquitousObjectsController which handles persistence and syncing as well.
 The only variables which are beeing assigned directly in this class are provider, username and password properties.
 The class also exposes convenience methods for validation which can be used in conjunction with the validation methods of RCCUbiquitousObjectsController.
*/

@interface RCCCredential : RCCUbiquitousObject
// MARK: Properties
@property (strong)   NSString       *provider;
@property (strong)   NSString       *username;
@property (strong)   NSString       *password;

// MARK: Init
/**
 Initialises an RCCCredential object.
 The returned object needs to be populated with values and does not validate as is.
 
 @return Newly initialized RCCCredential object.
*/
- (id)init;

// MARK: Validation
/**
 @return YES, if the object owns a valid uid. NO, if not.
 */
- (BOOL)uidIsValid:(NSError **)error;
/**
 @return YES, if the object owns a valid timestamp. NO, if not.
 */
- (BOOL)timestampIsValid:(NSError **)error;
/**
 @return YES, if the object owns a username string that is at least one character. NO, if not.
 */
- (BOOL)usernameIsValid:(NSError **)error;
/**
 @return YES, if the object owns a provider string that is at least one character. NO, if not.
 */
- (BOOL)providerIsValid:(NSError **)error;
/**
 @return YES, if the object owns a password string that is at least eight characters long. NO, if not.
 */
- (BOOL)passwordIsValid:(NSError **)error;
/**
 Determines whether the receiver can be inserted in a local or synced store in its current state.
 
 @return If there have been validation errors: Returns an array of NSError objects containing a localized error description and a pointer to the invalid object (key: "invalidObject" in the userInfo dictionary). Returns nil, in case of no errors.
 */
- (NSArray *)validationErrors;
@end